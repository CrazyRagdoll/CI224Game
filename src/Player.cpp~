#include "Player.h"

Player::Player() 
  : GameAsset(
	      string("shaders/hello-gl.v.glsl")
	      , string("shaders/hello-gl.f.glsl")
	      )
{
  Player(0, 0, 0);
}

Player::Player(float x, float y, float z) {
  this->li = nullptr;

 bbox.reset();
  bbox = shared_ptr<BoundingBox>(new BoundingBox(Point3(x, y, z), 1.0, 1.0, 1.0));

  make_resources();
}

Player::~Player() {
  // TODO: do something nice and fun here.
}

void Player::update() {
  if (nullptr != li) {
    //    std::cout << "x: " << bbox->getCentre()->getX() << "\ty: " << bbox->getCentre()->getY() << "\tz:" << bbox->getCentre()->getZ() << std::endl;
    shared_ptr<Point3> p = shared_ptr<Point3>(new Point3(this->li->update()));

    bbox.reset();
    bbox = shared_ptr<BoundingBox>(new BoundingBox(*p, 1.0, 1.0, 1.0));
  }
}

void Player::setInterpolator(shared_ptr<IInterpolator> li) {
  this->li.swap(li);
}

void Player::draw() {
//  std::cout << "x: " << bbox->getCentre()->getX() << "\ty: " << bbox->getCentre()->getY() << "\tz:" << bbox->getCentre()->getZ() << std::endl;
  GameAsset::draw();
}
